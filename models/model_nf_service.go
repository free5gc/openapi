/*
 * NRF NFManagement Service
 *
 * NRF NFManagement Service
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"time"
)

type NfService struct {
	ServiceInstanceId                string                            `json:"serviceInstanceId" yaml:"serviceInstanceId" bson:"serviceInstanceId" mapstructure:"ServiceInstanceId"`
	ServiceName                      ServiceName                       `json:"serviceName" yaml:"serviceName" bson:"serviceName" mapstructure:"ServiceName"`
	Versions                         *[]NfServiceVersion               `json:"versions" yaml:"versions" bson:"versions" mapstructure:"Versions"`
	Scheme                           UriScheme                         `json:"scheme" yaml:"scheme" bson:"scheme" mapstructure:"Scheme"`
	NfServiceStatus                  NfServiceStatus                   `json:"nfServiceStatus" yaml:"nfServiceStatus" bson:"nfServiceStatus" mapstructure:"NfServiceStatus"`
	Fqdn                             string                            `json:"fqdn,omitempty" yaml:"fqdn" bson:"fqdn" mapstructure:"Fqdn"`
	InterPlmnFqdn                    string                            `json:"interPlmnFqdn,omitempty" yaml:"interPlmnFqdn" bson:"interPlmnFqdn" mapstructure:"InterPlmnFqdn"`
	IpEndPoints                      *[]IpEndPoint                     `json:"ipEndPoints,omitempty" yaml:"ipEndPoints" bson:"ipEndPoints" mapstructure:"IpEndPoints"`
	ApiPrefix                        string                            `json:"apiPrefix,omitempty" yaml:"apiPrefix" bson:"apiPrefix" mapstructure:"ApiPrefix"`
	DefaultNotificationSubscriptions []DefaultNotificationSubscription `json:"defaultNotificationSubscriptions,omitempty" yaml:"defaultNotificationSubscriptions" bson:"defaultNotificationSubscriptions" mapstructure:"DefaultNotificationSubscriptions"`
	AllowedPlmns                     *[]PlmnId                         `json:"allowedPlmns,omitempty" yaml:"allowedPlmns" bson:"allowedPlmns" mapstructure:"AllowedPlmns"`
	AllowedNfTypes                   []NfType                          `json:"allowedNfTypes,omitempty" yaml:"allowedNfTypes" bson:"allowedNfTypes" mapstructure:"AllowedNfTypes"`
	AllowedNfDomains                 []string                          `json:"allowedNfDomains,omitempty" yaml:"allowedNfDomains" bson:"allowedNfDomains" mapstructure:"AllowedNfDomains"`
	AllowedNssais                    *[]Snssai                         `json:"allowedNssais,omitempty" yaml:"allowedNssais" bson:"allowedNssais" mapstructure:"AllowedNssais"`
	Priority                         int32                             `json:"priority,omitempty" yaml:"priority" bson:"priority" mapstructure:"Priority"`
	Capacity                         int32                             `json:"capacity,omitempty" yaml:"capacity" bson:"capacity" mapstructure:"Capacity"`
	Load                             int32                             `json:"load,omitempty" yaml:"load" bson:"load" mapstructure:"Load"`
	RecoveryTime                     *time.Time                        `json:"recoveryTime,omitempty" yaml:"recoveryTime" bson:"recoveryTime" mapstructure:"RecoveryTime"`
	ChfServiceInfo                   *ChfServiceInfo                   `json:"chfServiceInfo,omitempty" yaml:"chfServiceInfo" bson:"chfServiceInfo" mapstructure:"ChfServiceInfo"`
	SupportedFeatures                string                            `json:"supportedFeatures,omitempty" yaml:"supportedFeatures" bson:"supportedFeatures" mapstructure:"SupportedFeatures"`
	Oauth2Required                   string                            `json:"oauth2Required,omitempty" yaml:"oauth2Required" bson:"oauth2Required" mapstructure:"oauth2Required"`
}
